<template>
	<view>
		<tm-notification v-if="noteShow" ref="note" label="当前时间不在大运范围内!"></tm-notification>
		<view class="pa-20">
			<view class="flex flex-row">
				<view class="flex-6">
					<tm-text :font-size="24" :label="'起运：' + GetStartYunLabel()" class="text-weight-b"></tm-text>
					<tm-text :font-size="24" :label="'起运公历：' + baziStore.startYun.solar" class="text-weight-b"></tm-text>
				</view>
				<view class="flex-6 flex-row flex-row-center-end">
					<view>
						<tm-text :font-size="24" :label="CurrentAge()" align="end" class="text-weight-b"></tm-text>
						<tm-text :font-size="24" :label="TaiSuiStatus()" align="end" class="text-weight-b"></tm-text>
					</view>
					<view class="ml-20"><tm-icon color="orange" name="tmicon-calendar-alt" @click="SkipCurrentTime()"></tm-icon></view>
				</view>
			</view>
		</view>
		<yun-scroll-list></yun-scroll-list>
	</view>
</template>

<script lang="ts" setup>
import {ref} from "vue"
import YunScrollList from '../index-speciali-yun-scroll-list/index-speciali-yun-scroll-list.vue';
import {useBaziStore} from '@/store/bazi.ts';
import {useYunStore} from '@/store/yun.ts';
import {dizhiList} from '@/config/common.ts';
import {guanxi as tsGuanxi} from '@/config/data/taisui.ts';
import {Solar} from "lunar-javascript"

const baziStore = useBaziStore();
const yunStore = useYunStore();
const note = ref(null);
const noteShow = ref(false)

function GetStartYunLabel() {
  let str = '出生后';
  const {startYun} = baziStore;
  if (startYun.year) str += startYun.year + '年';
  if (startYun.month) str += startYun.month + '月';
  if (startYun.day) str += startYun.day + '日';
  if (startYun.hour) str += startYun.hour + '时';
  str += '后起运';
  return str;
}

function TaiSuiStatus() {
  let key = yunStore.yearList[yunStore.yearIndex]?.ganzhi[1];
  key = key + baziStore.dizhi.year
  return tsGuanxi[key] ?? "未犯太岁";
}

function CurrentAge() {
  return yunStore.yearList[yunStore.yearIndex]?.age + "岁";
}

function SkipCurrentTime() {
  const originalList = yunStore.original
  const minYear = originalList[0].getStartYear()
  const maxYear = originalList[originalList.length - 1].getEndYear()
  const currenYear = new Date().getFullYear()
  if (currenYear < minYear || currenYear > maxYear) {
    // UI框架的一个Bug
    noteShow.value = true;
    // setTimeout(()=>{
    // 	note.value.show()
    // },400)
  } else {
    for (let i = 0; i < originalList.length; i++) {
      const minYear = originalList[i].getStartYear()
      const maxYear = originalList[i].getEndYear()
      if (currenYear >= minYear && currenYear <= maxYear) {
        const yearList = originalList[i].getLiuNian()
        yunStore.currentIndex = i
        yunStore.resolveDaYun()
        for (let i = 0; i < yearList.length; i++) {
          if (yearList[i].getYear() == currenYear) {
            yunStore.yearIndex = i
            yunStore.resolveLiuYear()
            const monthList = yunStore.monthList
            const currenTimestmap = new Date().getTime()
            for (let i = 0; i < monthList.length; i++) {
              const year = monthList[i].year
              const _year = i < 10 ? year : year + 1;
              const _date = (i < 11 ? year : year + 1) + '/' + monthList[i].date;
              const nextDate = _year + '/' + monthList[i].nextJieqiDate;
              const _timestmap = new Date(_date).getTime()
              const nextTimestmap = new Date(nextDate).getTime()
              if (_timestmap <= currenTimestmap && nextTimestmap > currenTimestmap) {
                yunStore.monthIndex = i
                yunStore.resolveLiuDay()
                const dayList = yunStore.dayList
                const currenDate = Solar.fromDate(new Date()).toYmd().replace(/-/g, '/')
                for (let i = 0; i < dayList.length; i++) {
                  if (currenDate == dayList[i].date) {
                    yunStore.dayIndex = i
                    yunStore.resolveLiuTime()
                    const solar = Solar.fromDate(new Date())
                    const timeZhi = solar.getLunar().getTimeZhi()
                    yunStore.timeIndex = dizhiList.indexOf(timeZhi)
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
</script>
